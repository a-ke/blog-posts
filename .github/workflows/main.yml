name: Trigger Cloudflare Pages Deployment on Article Update

on:
  push:
    branches: [ "main" ] # 监听 main 分支的 push 事件
    paths: 
      - "**/*.md"       # 仅当 markdown文件变更时触发

jobs:
  trigger-deployment:
    runs-on: ubuntu-latest
    steps:
      # - name: Checkout Articles Repo
      #   uses: actions/checkout@v4

      # 可选：验证文章是否有效（例如用 markdownlint）
      # - name: Lint Markdown Files
      #   run: |
      #     npm install -g markdownlint-cli
      #     markdownlint "**/*.md" --ignore node_modules

      # 通过 GitHub API 触发目标仓库的重新部署
      # 方法1：直接调用 Cloudflare Pages API（需配置 CF_API_TOKEN）
      - name: Trigger Cloudflare Pages Deployment
        run: |
          curl -X POST \
            "${{ vars.CLOUDFLARE_DEPLOY_WEBHOOK }}"
